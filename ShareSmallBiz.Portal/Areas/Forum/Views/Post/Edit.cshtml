@using ShareSmallBiz.Portal.Infrastructure.Models
@model DiscussionModel

@{
    ViewData["Title"] = Model.Id == 0 ? "Create Post" : "Edit Post";
}

@section Styles {
    <link rel="stylesheet" href="/dist/trumbowyg/ui/trumbowyg.min.css">
    <style>
        /* Ensure enough space at the bottom to avoid hidden fields */
        .form-container {
            padding-bottom: 200px; /* Adjust as needed */
        }

        .cover-preview {
            max-width: 200px; /* Reduced size */
            height: auto;
            display: block;
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        /* Highlight Lookup Button */
        #browseImages {
            font-size: 1.1rem; /* Make it slightly larger */
            font-weight: bold;
            padding: 10px 20px;
        }

        /* Media selection styling */
        .selected-media {
            border: 2px solid #007bff;
            position: relative;
        }

            .selected-media::after {
                content: '✓';
                position: absolute;
                top: 5px;
                right: 5px;
                background-color: #007bff;
                color: white;
                width: 20px;
                height: 20px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 12px;
            }
    </style>
}

<div class="container mt-4 form-container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2><i class="bi bi-pencil-square"></i> @ViewData["Title"]</h2>
        <a asp-area="Forum" asp-controller="Home" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Posts
        </a>
    </div>

    <!-- Save Button at the Top -->
    <div class="text-end mb-3">
        <button type="submit" form="postForm" class="btn btn-success">
            <i class="bi bi-save"></i> Save Post
        </button>
    </div>

    <form id="postForm" asp-action="@(Model.Id == 0 ? "Create" : "Edit")" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="Id" />

        <div class="mb-3">
            <label asp-for="Title" class="form-label">Title</label>
            <input asp-for="Title" class="form-control" placeholder="Enter post title" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label">Description</label>
            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter a brief description" required></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Content" class="form-label">Content</label>
            <textarea asp-for="Content" class="form-control" id="contentEditor" rows="6" placeholder="Enter full content" required></textarea>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>

        <!-- Image Upload & Lookup -->
        <div class="mb-3">
            <label asp-for="Cover" class="form-label">Cover Image</label>
            <div class="input-group">
                <input asp-for="Cover" id="coverUrl" class="form-control" placeholder="Enter cover image URL" />
                <button type="button" class="btn btn-outline-secondary" id="browseImages">
                    <i class="bi bi-search"></i> Find Image
                </button>
            </div>
            <div class="form-text">Use the "Find Image" button to search for free images from Unsplash.</div>

            <!-- Cover Preview -->
            <div class="mt-2">
                @if (!string.IsNullOrEmpty(Model.Cover))
                {
                    <img id="coverPreview" class="cover-preview" src="@Model.Cover" alt="Cover Image Preview" />
                }
                else
                {
                    <img id="coverPreview" class="cover-preview" style="display: none;" alt="Cover Image Preview" />
                }
            </div>
        </div>

        <div class="mb-3 form-check">
            <input asp-for="IsPublic" class="form-check-input" />
            <label asp-for="IsPublic" class="form-check-label">Public Post</label>
        </div>
        <div class="mb-3 form-check">
            <input asp-for="IsFeatured" class="form-check-input" />
            <label asp-for="IsFeatured" class="form-check-label">Featured Post</label>
        </div>

        <div class="mb-3">
            <label asp-for="Published" class="form-label">Publish Date</label>
            <input asp-for="Published" type="date" class="form-control" required />
        </div>

        <!-- Tag Selection Section -->
        <div class="mb-3">
            <label class="form-label">Tags</label>
            <div class="mb-2">
                <input type="text" id="tagSearch" class="form-control" placeholder="Search for tags...">
            </div>

            <!-- Available tags -->
            <div class="mb-3">
                <label class="form-label">Available Tags</label>
                <div id="availableTags" class="d-flex flex-wrap gap-2 p-2 border rounded">
                    @foreach (var keyword in Model.Keywords.Where(k => !Model.Tags.Contains(k)))
                    {
                        <span class="badge bg-secondary tag-item" data-tag="@keyword">
                            @keyword <i class="bi bi-plus-circle ms-1" role="button"></i>
                        </span>
                    }
                </div>
            </div>

            <!-- Selected tags -->
            <div class="mb-3">
                <label class="form-label">Selected Tags</label>
                <div id="selectedTags" class="d-flex flex-wrap gap-2 p-2 border rounded">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-primary tag-item" data-tag="@tag">
                            @tag <i class="bi bi-x-circle ms-1" role="button"></i>
                            <input type="hidden" name="Tags" value="@tag">
                        </span>
                    }
                </div>
                <div id="noTagsMessage" class="text-muted small mt-2" style="display: @(Model.Tags.Any() ? "none" : "block")">
                    No tags selected. Click on available tags to add them.
                </div>
            </div>
        </div>

        <!-- Media Library Section -->
        <div class="mb-3">
            <label class="form-label">Media Library</label>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <div class="form-text">Add media from your library to this post.</div>
                <button type="button" class="btn btn-outline-primary btn-sm" id="browseMediaLibrary">
                    <i class="bi bi-images me-1"></i> Browse Media Library
                </button>
            </div>

            <!-- Selected Media List -->
            <div id="selectedMedia" class="row row-cols-2 row-cols-md-4 g-3 mb-3">
                @if (Model.Media != null && Model.Media.Any())
                {
                    @foreach (var media in Model.Media)
                    {
                        <div class="col">
                            <div class="card h-100 selected-media" data-media-id="@media.Id">
                                @if (media.MediaType == ShareSmallBiz.Portal.Data.Enums.MediaType.Image)
                                {
                                    <img src="/Media/Thumbnail/@media.Id" class="card-img-top" style="height: 120px; object-fit: cover;" alt="@media.FileName">
                                }
                                else
                                {
                                    <div class="card-img-top bg-light text-center pt-4" style="height: 120px;">
                                        <i class="bi bi-file-earmark fs-1 text-secondary"></i>
                                    </div>
                                }
                                <div class="card-body p-2">
                                    <p class="card-text small text-truncate">@media.FileName</p>
                                    <input type="hidden" name="MediaIds" value="@media.Id">
                                </div>
                                <button type="button" class="btn btn-sm btn-outline-danger position-absolute top-0 end-0 m-1 remove-media">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Save Button at the Bottom -->
        <div class="text-end">
            <button type="submit" class="btn btn-success">
                <i class="bi bi-save"></i> Save Post
            </button>
        </div>
    </form>
</div>

<!-- Unsplash Image Picker Modal -->
<div class="modal fade" id="unsplashModal" tabindex="-1" aria-labelledby="unsplashModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select an Unsplash Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <input type="text" id="unsplashSearch" class="form-control" placeholder="Search for images...">
                    <button class="btn btn-outline-primary" type="button" id="searchUnsplashBtn">
                        <i class="bi bi-search"></i> Search
                    </button>
                </div>
                <div id="unsplashResults" class="row row-cols-1 row-cols-md-3 g-3">
                    <!-- Search results will be populated here -->
                    <div class="col-12 text-center text-muted">
                        <p>Enter a search term to find images</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="selectUnsplashImage" disabled>
                    <i class="bi bi-check-circle me-1"></i> Select Image
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Media Library Modal -->
<div class="modal fade" id="mediaLibraryModal" tabindex="-1" aria-labelledby="mediaLibraryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Media from Library</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" id="mediaSearch" class="form-control" placeholder="Search your media...">
                            <button class="btn btn-outline-primary" type="button" id="searchMediaBtn">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select id="mediaTypeFilter" class="form-select">
                            <option value="">All Media Types</option>
                            <option value="0">Images</option>
                            <option value="1">Videos</option>
                            <option value="2">Audio</option>
                            <option value="3">Documents</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-primary w-100" id="loadMediaBtn">
                            <i class="bi bi-arrow-repeat me-1"></i> Load Media
                        </button>
                    </div>
                </div>

                <div id="mediaResults" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3">
                    <!-- Media results will be loaded here -->
                    <div class="col-12 text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="addSelectedMedia">
                    <i class="bi bi-plus-circle me-1"></i> Add Selected Media
                </button>
            </div>
        </div>
    </div>
</div>

<section>
    <div class="row">
        <div class="col-md-12">
            <br />
            <hr />
            <br />
        </div>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="/dist/trumbowyg/trumbowyg.min.js"></script>
    <script>
           $(document).ready(function () {
               // Initialize Trumbowyg with Restrictions
               $('#contentEditor').trumbowyg({
                   btns: [
                       ['bold', 'italic', 'underline', 'strikethrough'],
                       ['formatting'],
                       ['link'],
                       ['unorderedList', 'orderedList'],
                       ['removeformat'],
                       ['fullscreen', 'viewHTML']
                   ],
                   autogrow: true,
                   removeformatPasted: true,
                   tagsToRemove: ['script', 'style'], // Keep scripts removed
                   semantic: true,
                   allowedTags: [
                       'p', 'br', 'ul', 'ol', 'li', 'a', 'strong', 'em', 'u', 'strike',
                       'iframe', 'img' // Allowing iframe for video embeds and images
                   ],
                   allowedAttributes: [
                       'href', 'title', 'target', 'alt', 'src',
                       'width', 'height', 'allow', 'frameborder', 'allowfullscreen'
                   ]
               });

               // Ensure pasted content is sanitized
               $('#contentEditor').on('tbwpaste', function () {
                   setTimeout(() => {
                       let sanitizedContent = $('#contentEditor').trumbowyg('html')
                           .replace(/<script[^>]*>.*?<\/script>/gi, '')
                           .replace(/<style[^>]*>.*?<\/style>/gi, '')
                           .replace(/<img[^>]*>/gi, '');
                       $('#contentEditor').trumbowyg('html', sanitizedContent);
                   }, 10);
               });

               $('#coverUrl').change(function () {
                   const url = $(this).val();
                   if (url) {
                       $('#coverPreview').attr('src', url).show();
                   } else {
                       $('#coverPreview').hide();
                   }
               });

               // Handle Unsplash Image Search & Modal
               $('#browseImages').click(function () {
                   $('#unsplashModal').modal('show');
               });

               // Handle Image Selection from Modal
               let selectedUnsplashImage = null;

               $('#searchUnsplashBtn').click(function() {
                   const query = $('#unsplashSearch').val();
                   if (!query) return;

                   // Show loading state
                   $('#unsplashResults').html('<div class="col-12 text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');

                   // Fetch images from Unsplash
                   $.getJSON(`/Media/Unsplash/api/search?query=${encodeURIComponent(query)}`, function(data) {
                       let imagesContainer = $('#unsplashResults');
                       imagesContainer.empty();

                       if (data.results && data.results.length > 0) {
                           data.results.forEach(image => {
                               let imageCard = `
                                   <div class="col">
                                       <div class="card h-100 image-card" data-image-url="${image.urls.regular}" data-attribution="${image.user.name}" data-profile="${image.user.links.html}">
                                           <img src="${image.urls.small}" class="card-img-top" style="height: 150px; object-fit: cover;" alt="${image.alt_description || 'Unsplash image'}">
                                           <div class="card-body p-2">
                                               <small class="text-muted">Photo by ${image.user.name}</small>
                                           </div>
                                       </div>
                                   </div>`;
                               imagesContainer.append(imageCard);
                           });

                           // Add click event to select image
                           $('.image-card').click(function() {
                               $('.image-card').removeClass('border-primary');
                               $(this).addClass('border-primary');
                               selectedUnsplashImage = {
                                   url: $(this).data('image-url'),
                                   attribution: $(this).data('attribution'),
                                   profile: $(this).data('profile')
                               };
                               $('#selectUnsplashImage').prop('disabled', false);
                           });
                       } else {
                           imagesContainer.html('<div class="col-12 text-center text-muted"><p>No images found. Try a different search term.</p></div>');
                       }
                   }).fail(function() {
                       $('#unsplashResults').html('<div class="col-12 text-center text-danger"><p>Error loading images. Please try again.</p></div>');
                   });
               });

               // Handle selecting image
               $('#selectUnsplashImage').click(function() {
                   if (selectedUnsplashImage) {
                       $('#coverUrl').val(selectedUnsplashImage.url);
                       $('#coverPreview').attr('src', selectedUnsplashImage.url).show();

                       // Add attribution if not already present in the content
                       const attributionText = `<p style="font-size: 12px; text-align: right;"><em>Photo by <a href="${selectedUnsplashImage.profile}" target="_blank">${selectedUnsplashImage.attribution}</a> on <a href="https://unsplash.com" target="_blank">Unsplash</a></em></p>`;

                       let content = $('#contentEditor').trumbowyg('html');
                       // Check if the attribution is already there
                       if (!content.includes(selectedUnsplashImage.attribution) || !content.includes('Unsplash')) {
                           $('#contentEditor').trumbowyg('html', content + attributionText);
                       }

                       $('#unsplashModal').modal('hide');
                   }
               });

               // Handle triggering search on enter
               $('#unsplashSearch').keypress(function(e) {
                   if (e.which === 13) {
                       $('#searchUnsplashBtn').click();
                       return false;
                   }
               });

               // Media Library Modal
               $('#browseMediaLibrary').click(function() {
                   $('#mediaLibraryModal').modal('show');
                   loadMediaLibrary();
               });

               // Load Media Library
               function loadMediaLibrary(searchTerm = '', mediaType = '') {
                   $('#mediaResults').html('<div class="col-12 text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');

                   // Fetch media from user's library
                   $.getJSON(`/api/Media/UserMedia?searchTerm=${encodeURIComponent(searchTerm)}&mediaType=${mediaType}`, function(data) {
                       let mediaContainer = $('#mediaResults');
                       mediaContainer.empty();

                       if (data && data.length > 0) {
                           data.forEach(media => {
                               // Skip media that's already selected
                               const alreadySelected = $(`#selectedMedia input[value="${media.id}"]`).length > 0;
                               const selectedClass = alreadySelected ? 'selected-media' : '';

                               let mediaCard = `
                                   <div class="col">
                                       <div class="card h-100 media-card ${selectedClass}" data-media-id="${media.id}" data-media-name="${media.fileName}">`;

                               if (media.mediaType === 0) { // Image
                                   mediaCard += `<img src="/Media/Thumbnail/${media.id}" class="card-img-top" style="height: 120px; object-fit: cover;" alt="${media.fileName}">`;
                               } else {
                                   mediaCard += `<div class="card-img-top bg-light text-center pt-4" style="height: 120px;">
                                               <i class="bi bi-file-earmark fs-1 text-secondary"></i>
                                           </div>`;
                               }

                               mediaCard += `
                                           <div class="card-body p-2">
                                               <p class="card-text small text-truncate">${media.fileName}</p>
                                           </div>
                                       </div>
                                   </div>`;

                               mediaContainer.append(mediaCard);
                           });

                           // Add click event to select media
                           $('.media-card').click(function() {
                               $(this).toggleClass('selected-media');
                           });
                       } else {
                           mediaContainer.html('<div class="col-12 text-center text-muted"><p>No media found. Try uploading media to your library first.</p></div>');
                       }
                   }).fail(function() {
                       $('#mediaResults').html('<div class="col-12 text-center text-danger"><p>Error loading media. Please try again.</p></div>');
                   });
               }

               // Handle media search
               $('#searchMediaBtn').click(function() {
                   const searchTerm = $('#mediaSearch').val();
                   const mediaType = $('#mediaTypeFilter').val();
                   loadMediaLibrary(searchTerm, mediaType);
               });

               // Handle reload media button
               $('#loadMediaBtn').click(function() {
                   loadMediaLibrary();
               });

               // Handle media type filter
               $('#mediaTypeFilter').change(function() {
                   const searchTerm = $('#mediaSearch').val();
                   const mediaType = $(this).val();
                   loadMediaLibrary(searchTerm, mediaType);
               });

               // Handle adding selected media
               $('#addSelectedMedia').click(function() {
                   const selectedMedia = $('.media-card.selected-media');

                   selectedMedia.each(function() {
                       const mediaId = $(this).data('media-id');
                       const mediaName = $(this).data('media-name');

                       // Skip if already added
                       if ($(`#selectedMedia input[value="${mediaId}"]`).length > 0) {
                           return;
                       }

                       // Clone the card for the selected media section
                       const mediaHtml = `
                           <div class="col">
                               <div class="card h-100 selected-media" data-media-id="${mediaId}">
                                   ${$(this).find('.card-img-top').prop('outerHTML') ||
                                     $(this).find('.card-img-top').html()}
                                   <div class="card-body p-2">
                                       <p class="card-text small text-truncate">${mediaName}</p>
                                       <input type="hidden" name="MediaIds" value="${mediaId}">
                                   </div>
                                   <button type="button" class="btn btn-sm btn-outline-danger position-absolute top-0 end-0 m-1 remove-media">
                                       <i class="bi bi-x"></i>
                                   </button>
                               </div>
                           </div>`;

                       $('#selectedMedia').append(mediaHtml);
                   });

                   // Add event listener for remove buttons
                   addRemoveMediaEvents();

                   $('#mediaLibraryModal').modal('hide');
               });

               // Add event listeners for remove media buttons
               function addRemoveMediaEvents() {
                   $('.remove-media').off('click').on('click', function() {
                       $(this).closest('.col').remove();
                   });
               }

               // Initialize remove media events
               addRemoveMediaEvents();

               // Tag search functionality
               $("#tagSearch").on("input", function() {
                   const searchTerm = $(this).val().toLowerCase();
                   $("#availableTags .tag-item").each(function() {
                       const tagText = $(this).data("tag").toLowerCase();
                       if (tagText.includes(searchTerm)) {
                           $(this).show();
                       } else {
                           $(this).hide();
                       }
                   });
               });
               // Add tag functionality
               $("#availableTags").on("click", ".tag-item", function() {
                   const tag = $(this).data("tag");
                   $(this).remove();
                   const selectedTag = $(`<span class="badge bg-primary tag-item" data-tag="${tag}">${tag} <i class="bi bi-x-circle ms-1" role="button"></i><input type="hidden" name="Tags" value="${tag}"></span>`);
                   $("#selectedTags").append(selectedTag);
                   updateTagsMessage();
               });

             // Remove tag functionality
             $("#selectedTags").on("click", ".tag-item", function() {
               const tag = $(this).data("tag");

               // Move tag from selected to available
               $(this).remove();

               const availableTag = $(`<span class="badge bg-secondary tag-item" data-tag="${tag}">
                   ${tag} <i class="bi bi-plus-circle ms-1" role="button"></i>
               </span>`);

               $("#availableTags").append(availableTag);
               updateTagsMessage();
             });

             // Helper function to update the "no tags" message visibility
             function updateTagsMessage() {
               if ($("#selectedTags .tag-item").length > 0) {
                   $("#noTagsMessage").hide();
               } else {
                   $("#noTagsMessage").show();
               }
             }
        });
    </script>
}