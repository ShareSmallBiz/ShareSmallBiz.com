@model DiscussionModel
@using Microsoft.AspNetCore.Identity
@using ShareSmallBiz.Portal.Data.Entities
@using ShareSmallBiz.Portal.Infrastructure.Models
@inject SignInManager<ShareSmallBizUser> SignInManager
@inject ShareSmallBizUserManager UserManager

@{
    ViewData["Title"] = Model.Title;
    var currentUserId = UserManager.GetUserId(User);
}

<!-- Main Container -->
<div class="container-fluid px-3 px-md-5 my-3">

    <!-- Post Content -->
    <div class="card shadow-lg border-0">
        <div class="card-body">

            <!-- Cover Image -->
            @if (!string.IsNullOrEmpty(Model.Cover))
            {
                <div class="cover-container mb-3">
                    <img src="@Model.Cover" class="img-fluid cover-image rounded shadow-sm lazyload" alt="Cover Image" loading="lazy">
                </div>
            }

            <!-- Post Title -->
            <h1 class="card-title text-center">@Model.Title</h1>

            <!-- Author & Metadata -->
            <p class="text-muted text-center">
                @if (Model?.Creator?.ProfilePictureUrl != null)
                {
                    <img class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;"
                         src="@Model?.Creator?.ProfilePictureUrl" alt="User Profile">
                }
                else
                {
                    <i class="bi bi-person-circle"></i>
                }
                <strong>@(Model?.Creator?.UserName ?? "Unknown Creator")</strong>
                | <i class="bi bi-eye"></i> @Model.PostViews views
                | <i class="bi bi-calendar"></i> @Model.Published.ToString("MMM d, yyyy")
            </p>

            <!-- Edit Post Link (Only for Author) -->
            @if (SignInManager.IsSignedIn(User) && Model.Creator.Id == currentUserId)
            {
                <div class="text-end">
                    <a href="/Forum/Post/Edit/@Model.Id" class="btn btn-outline-secondary"><i class="bi bi-pencil"></i> Edit Post</a>
                </div>
            }

            <hr />

            <!-- Post Content -->
            <div class="post-content">
                @Html.Raw(Model.Content)
            </div>
        </div>
    </div>

    <section class="card shadow-sm border-0 p-3 mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="mb-0"><i class="bi bi-chat-dots"></i> Comments</h3>
        </div>



        <div id="commentSection" data-post-id="@Model.Id">

            <h3>Comments for Post</h3>
            <div id="commentsContainer">
                @if (Model != null && Model.Comments.Any())
                {
                    <div class="list-group">
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="list-group-item py-2">
                                <div class="d-flex align-items-start">
                                    @if (comment?.Author?.ProfilePictureUrl != null)
                                    {
                                        <img class="rounded-circle me-2 flex-shrink-0" style="width: 36px; height: 36px; object-fit: cover;"
                                             src="@comment?.Author?.ProfilePictureUrl" alt="User Profile">
                                    }
                                    else
                                    {
                                        <i class="bi bi-person-circle fs-3 text-secondary me-2"></i>
                                    }
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between">
                                            <strong class="text-truncate">@(comment.Author?.UserName ?? "Anonymous")</strong>
                                            <small class="text-muted"><i class="bi bi-clock"></i> @comment.CreatedDate.ToString("MMM d, yyyy")</small>
                                        </div>
                                        <p class="small text-muted mb-1">@comment.Content</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted text-center small py-3"><i class="bi bi-chat-left-text"></i> No comments yet. Be the first to share your thoughts!</p>
                }
            </div>

            @if (User?.Identity?.IsAuthenticated == true)
            {
                <hr />
                <div id="addCommentContainer">
                    <textarea id="newCommentContent" rows="3" cols="60" placeholder="Add a comment..."></textarea>
                    <br />
                    <button id="btnAddComment" type="button">Add Comment</button>
                </div>
            }
        </div>

        <hr />
        @if (!SignInManager.IsSignedIn(User))
        {
            <!-- Call to Action for Guests -->
            <div class="alert alert-info text-center mt-3">
                <p><strong>Want to join the conversation?</strong></p>
                <p>
                    <a href="/Identity/Account/Login" class="btn btn-primary"><i class="bi bi-box-arrow-in-right"></i> Log In</a>
                    or <a href="/Identity/Account/Register" class="btn btn-success"><i class="bi bi-person-plus-fill"></i> Sign Up</a> to like and comment.
                </p>
            </div>
        }
    </section>
</div>

<section>
    <div>
        <br/>
        <br />
        <br />
        <hr/>
    </div>

</section>